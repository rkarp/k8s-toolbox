apiVersion: >-
  {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
  networking.k8s.io/v1
  {{- else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1/Ingress" }}
  networking.k8s.io/v1beta1
  {{- else }}
  extensions/v1beta1
  {{- end }}
kind: Ingress
metadata:
  name: {{ .Release.Name }}
{{- with .Values.annotations }}
  annotations:
    {{- if not ($.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress") }}
    kubernetes.io/ingress.class: {{ $.Values.ingressClassName }}
    {{- end }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
  ingressClassName: {{ .Values.ingressClassName }}
  {{- end }}
  {{- if .Values.tls }}
  tls:
    {{- range .Values.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      {{- if .secretName }}
      secretName: {{ .secretName }}
      {{- end }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.rules }}
    - host: {{ .host | quote }}
      http:
        paths:
          - path: {{ .path | default $.Values.defaultPath }}
            {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
              service:
                name: {{ .serviceName }}
                port:
                  {{- if .servicePortName }}
                  name: {{ .servicePortName }}
                  {{- else }}
                  number: {{ .servicePortNumber }}
                  {{- end }}
              {{- else }}
              serviceName: {{ .serviceName }}
              servicePort: {{ .servicePortName | default .servicePortNumber }}
              {{- end }}
    {{- end }}
